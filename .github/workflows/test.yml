# This is a basic workflow to help you get started with Actions

name: Test and lint

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events for any branch
  push:
    # branches: [ master ]
  pull_request:
    # branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python: [3.7, 3.8, 3.x]
        include:
        - os: ubuntu-latest
          cache_path: ~/.cache/pip
        - os: macos-latest
          cache_path: ~/Library/Caches/pip
        - os: windows-latest
          cache_path: ~\AppData\Local\pip\Cache

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: ${{ matrix.python }} # optional, default is 3.x

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ matrix.cache_path }}
          # Look to see if there is a cache hit for the corresponding setup.py file (where dependencies are defined)
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install package, dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Test as in setup.py (includes linting)
        run: python setup.py test
